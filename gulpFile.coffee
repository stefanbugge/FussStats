'use strict'
gulp       = require 'gulp'
gp         = (require 'gulp-load-plugins') lazy: false
path       = require 'path'
browserify = require 'browserify'
watchify   = require 'watchify'
source     = require 'vinyl-source-stream'
minimatch  = require 'minimatch'
gulpif     = require('gulp-if')
notify     = require "gulp-notify"
sass        = require 'gulp-ruby-sass'

dist = "./dist"
config =
  dist:
    js: "#{dist}/js"
    css: "#{dist}/css"
  sassPath: './resources/sass'
  bowerDir: './bower_components'

notifyError = notify.onError("<%= error.toString() %>\n<%= error.stack %>")
error = (args...) ->
  notifyError(args...)
  @emit('end')

watch = null
gulp.task 'browserify-nowatch', ->
  watch = false
  browserifyShare()
  return
gulp.task 'browserify-watch', ->
  watch = true
  browserifyShare()
  return

browserifyShare = ->

  b = browserify(
    entries: ['./resources/js/main.coffee']
    extensions: ['.coffee', '.js']
  )
  .transform 'coffeeify'
  #.transform 'uglifyify'

  if watch
    # if watch is enable, wrap this bundle inside watchify
    b = watchify(b)
    b.on 'update', ->
      bundleShare b
      return

  #b.add './resources/js/main.js'
  bundleShare b
  return

bundleShare = (b) ->
  b.bundle()
    .pipe(source('main.js'))
    .pipe(gulp.dest(config.dist.js))
#    .pipe gulpif(watch, livereload())
  return

gulp.task 'css', ->
  sass('./resources/sass',
    #style: 'compressed'
    loadPath: [
      './resources/sass'
      config.bowerDir + '/bootstrap-sass-official/assets/stylesheets'
  ]).on('error', notify.onError((error) ->
    'Error: ' + error.message
  )).pipe gulp.dest(config.dist.css)

# define the browserify-watch as dependencies for this task
gulp.task 'watch', [ 'browserify-watch' ], ->
  # watch other files, for example .less file
  #gulp.watch './less/*.less', [ 'compile-less' ]
  gulp.watch config.sassPath + '/**/*.scss', [ 'css' ]
  # Start live reload server
  #livereload.listen 35729
  return

# ---
# generated by js2coffee 2.0.1